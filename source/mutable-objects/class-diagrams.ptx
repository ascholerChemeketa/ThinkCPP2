<section xml:id="mutable-objects_class-diagrams" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Class Diagrams</title>
<p>
To summarize what you've learned so far, <pf>Point</pf> and <pf>Rectangle</pf> objects have attributes and functions.
Attributes are an object's <term>data</term>; functions are an object's <term>code</term>.
An object's <term>class</term> definition specifies the attributes and functions that it has.
</p>

<p>
    <idx><h>UML</h></idx>
<term>Unified Modeling Language</term> (UML) defines a graphical way to summarize this information.
<xref ref="fig_umlPoint">Figure</xref> shows two examples, the UML <term>class diagrams</term> for the <pf>Point</pf> and <pf>Rectangle</pf> classes.
</p>
<figure xml:id="fig_umlPoint" >
<caption>UML class diagrams for <pf>Point</pf> and <pf>Rectangle</pf>.</caption>
<image width="73%" source="images/point-rect.png" />
</figure>
<p>
    <idx><h>class diagram</h></idx>
    <idx><h>diagram</h><h>class</h></idx>
Each class is represented by a box with the name of the class,
a list of attributes, and a list of functions.
</p>

<p>
    <idx><h>private</h></idx>
    <idx><h>variable</h><h>private</h></idx>
To identify the types of attributes and parameters, UML uses a language-independent syntax, like <pf>x: int</pf> rather than Java syntax, <pf>int x</pf>.
</p>

<p>
The plus sign (<pf>+</pf>) identifies <pf>public</pf> attributes and functions.
A minus sign (<pf>-</pf>) identifies <pf>private</pf> attributes and functions, which we discuss in the next chapter.
</p>

<p>
Both <pf>Point</pf> and <pf>Rectangle</pf> have additional functions; we show only the ones introduced in this chapter.
</p>

<p>
In contrast to memory diagrams, which visualize objects (and variables) at run-time, a class diagram visualizes the source code at compile-time.
</p>
</section>
