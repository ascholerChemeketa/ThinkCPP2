<section xml:id="templates-array-list_vocabulary"
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Vocabulary</title>
  <p>
    <dl>
      <li>
        <title>data structure:</title>
        <p>
          <idx>
            <h>data structure</h>
          </idx> A system for organizing and storing data in a computer so that it can be accessed and modified efficiently.</p>
      </li>
      <li>
        <title>list:</title>
        <p>
          <idx>
            <h>list</h>
          </idx> A data structure that organizes a collection of elements in a numbered sequence (item 0, item 1, item 2, ...).</p>
      </li>
      <li>
        <title>array list:</title>
        <p>
          <idx>
            <h>array list</h>
          </idx> A data structure that stores a collection of elements in a contiguous block of memory, allowing for efficient access and modification of elements via an index.</p>
      </li>
      <li>
        <title>templates:</title>
        <p>
          <idx>
            <h>templates</h>
          </idx> A feature of C++ that allows functions and classes to operate with generic types, enabling code reuse and flexibility.</p>
      </li>
      <li>
        <title>template type parameter:</title>
        <p>
          <idx>
            <h>template type parameter</h>
          </idx> 
          <idx>
            <h>type parameter</h>
            <h>template</h>
          </idx> A placeholder (`&lt;T&gt;`) for a data type that is specified when a template is instantiated, allowing the template to operate on different types.</p>
      </li>
    </dl>
  </p>
</section>