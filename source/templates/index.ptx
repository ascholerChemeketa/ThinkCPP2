<chapter xml:id="templates-array-list"
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Templates and Array Lists</title>

  <introduction>
    <p>In this chapter, we will explore how to write generic code using templates. Generics allow us to create functions and classes that can operate on different data types.</p>
    <p>We will also learn about a simple data structure, the array list, that uses templates to allow
      storage of any data type.</p>
    <note>
      <p>Templates are an enormously powerful and complex feature of C++. We will only be making use of a small subset of their capabilities in this book.</p>
    </note>
  </introduction>

  <xi:include href="functions.ptx"/>
  <xi:include href="type-parameter.ptx"/>
  <xi:include href="parameter-use.ptx"/>
  <xi:include href="operators.ptx"/>
  <xi:include href="files.ptx"/>
  <xi:include href="types.ptx"/>
  <xi:include href="member-functions.ptx"/>
  <xi:include href="array-list-intro.ptx"/>
  <xi:include href="array-list-basics.ptx"/>
  <xi:include href="array-list-insert.ptx"/>
  <xi:include href="array-list-grow.ptx"/>
  <xi:include href="array-list-access-remove.ptx"/>
  <xi:include href="array-list-insert-at.ptx"/>
  <xi:include href="vocabulary.ptx"/>
  <xi:include href="exercises.ptx"/>
  <xi:include href="appendix-array-list-module.ptx"/>
  <xi:include href="appendix-array-list-header.ptx"/>

</chapter>