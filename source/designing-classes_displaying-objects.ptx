<section xml:id="designing-classes_displaying-objects" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Displaying Objects</title>
<p>
To display <c>Time</c> objects, we can write a function to display the hour, minute, and second.
Using <c>printTime</c> in <xref ref="multparam">Section</xref> as a starting point, we could write the following:
</p>

<p>
    <idx><h>printTime</h></idx>
</p>

<program xml:id="designing-classes_displaying-objects-1">
<xi:include href="../programs/designing-classes_displaying-objects-1.cpp" parse="text"/>
</program>

<p>
The output of this function, given the <c>time</c> object from the first example, would be <c>11:59:59.9</c>.
We can use <c>printf</c> to make the code more concise:
</p>

<p>
    <idx><h>printf</h></idx>
    <idx><h>print statement</h></idx>
    <idx><h>format string</h></idx>
</p>

<program xml:id="designing-classes_displaying-objects-2">
<xi:include href="../programs/designing-classes_displaying-objects-2.cpp" parse="text"/>
</program>

<p>
As a reminder, you need to use <c>%d</c> with integers, and <c>%f</c> with floating-point numbers.
The <c>02</c> option means <q>total width 2, with leading zeros if necessary</q>, and the <c>04.1</c> option means <q>total width 4, one digit after the decimal point, leading zeros if necessary</q>.
The output is the same: <c>11:59:59.9</c>.
</p>

<p>
There's nothing wrong with a function like <c>printTime</c>, but it is not consistent with object-oriented style.
A more idiomatic solution is to provide a special function called <c>toString</c>.
</p>
</section>
