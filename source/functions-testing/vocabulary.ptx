<section xml:id="functions-testing_vocabulary"
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Vocabulary</title>
  <p>
    <dl>
      <li>
        <title>void:</title>
        <p>
          <idx>
            <h>void</h>
          </idx> A special return type indicating the function does not
          return a value.</p>
      </li>
      <li>
        <title>invoke:</title>
        <p>
          <idx>
            <h>call</h>
          </idx> To cause a function to execute. Also known as <q>invoking</q>
          a function.</p>
      </li>
      <li>
        <title>flow of execution:</title>
        <p>
          <idx>
            <h>flow of execution</h>
          </idx> The order in which Java executes functions and
          statements. It may not necessarily be from top to bottom in the source file.</p>
      </li>
      <li>
        <title>argument:</title>
        <p>
          <idx>
            <h>argument</h>
          </idx> A value that you provide when you call a function. This
          value must have the type that the function expects.</p>
      </li>
      <li>
        <title>parameter:</title>
        <p>
          <idx>
            <h>parameter</h>
          </idx> A piece of information that a function requires before
          it can run. Parameters are variables: they contain values and have types.</p>
      </li>
      <li>
        <title>parameter passing:</title>
        <p>
          <idx>
            <h>parameter passing</h>
          </idx> The process of assigning an argument value to a
          parameter variable.</p>
      </li>
      <li>
        <title>local variable:</title>
        <p>
          <idx>
            <h>local variable</h>
          </idx> A variable declared inside a function. Local
          variables cannot be accessed from outside their function.</p>
      </li>
      <li>
        <title>stack diagram:</title>
        <p>
          <idx>
            <h>stack diagram</h>
          </idx> A graphical representation of the variables
          belonging to each function. The function calls are <q>stacked</q> from top to bottom, in
          the flow of execution.</p>
      </li>
      <li>
        <title>frame:</title>
        <p>
          <idx>
            <h>frame</h>
          </idx> In a stack diagram, a representation of the variables and
          parameters for a function, along with their current values.</p>
      </li>
      <li>
        <title>scope:</title>
        <p>
          <idx>
            <h>scope</h>
          </idx> The area of a program where a variable can be used.</p>
      </li>
      <li>
        <title>return type:</title>
        <p>
          <idx>
            <h>return type</h>
          </idx> The type of value a function returns.</p>
      </li>
      <li>
        <title>return value:</title>
        <p>
          <idx>
            <h>return value</h>
          </idx> The value provided as the result of a function
          invocation.</p>
      </li>
      <li>
        <title>temporary variable:</title>
        <p>
          <idx>
            <h>temporary variable</h>
          </idx> A short-lived variable, often used for
          debugging.</p>
      </li>
    </dl>
  </p>
</section>