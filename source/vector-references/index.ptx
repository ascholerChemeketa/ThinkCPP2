<chapter xml:id="vector-references"
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Vectors and References</title>

  <introduction>
    <p>Up to this point, the only variables we have used were for individual values such as numbers
      or strings. In this chapter, you'll learn how to store multiple values of the same type in a single variable. This language feature will enable you to write programs that
      manipulate larger amounts of data.</p>

    <p>We will start with a simple example: counting the number of times each letter appears in a
      string. The naive approach is to use a nested loop. For each letter, we iterate through the string looking
      for matches to that letter:</p>

    <program xml:id="vector-references-1">
<xi:include href="../../programs/vector-references-1.cpp" parse="text"/>
</program>

    <p>This <q>nested loops</q> approach is inefficient, especially when the string is long. For
      example, there are more than 3 million characters in <term>War and Peace</term>; to process
      the whole book, the nested loop would run about 80 million times.</p>

    <p>Another algorithm would initialize 26 variables to zero, loop through the string <term>one
      time</term>, and use a giant <c>if</c> statement to update the variable for each letter. But who
      wants to declare 26 variables or write that if statement? </p>

    <p>That's where vector come in. We can use a single variable to store 26 integers. Rather than
      use an <c>if</c> statement to update each value, we can use arithmetic to update the <m>n</m>th
      value directly. We will present this algorithm at the end of the chapter.</p>

    <note><p>As with strings, the Codelens feature does not display vectors well. So it is of limited use when working with programs involving strings. Instead, use print statements or a debugger in some external environment.</p></note>
  </introduction>

  <xi:include href="what-are-vectors.ptx"/>
  <xi:include href="creating-vectors.ptx"/>
  <xi:include href="accessing-elements.ptx"/>
  <xi:include href="insertion-removal.ptx"/>
  <xi:include href="traversing-vectors.ptx"/>
  <xi:include href="references.ptx"/>
  <xi:include href="references-functions.ptx"/>
  <xi:include href="const-references.ptx"/>
  <xi:include href="vector-functions.ptx"/>
  <xi:include href="traversing-recipes.ptx"/>
  <xi:include href="counting-characters.ptx"/>
  <xi:include href="vocabulary.ptx"/>
  <xi:include href="exercises.ptx"/> 

  <!--
  <xi:include href="building-a-histogram.ptx"/>-->
</chapter>