<section xml:id="computer-programming_debugging-programs"
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Debugging Programs</title>

  <p> Whenever you are experimenting with a new feature, you should also try to make mistakes. For
    example, in the Hello World program, what happens if you leave out one of the quotation marks?
    What if you leave out both? What if you spell <c>cout</c> wrong? These kinds of experiments help you
    remember what you read. They also help with debugging, because you learn what the error messages
    mean. It is better to make mistakes now and on purpose than later on and accidentally.<idx>
      <h>error</h>
      <h>message</h>
    </idx>
  </p>

  <p>Debugging is like an experimental science: once you have an idea about what is going wrong, you
    modify your program and try again. If your hypothesis was correct, then you can predict the
    result of the modification, and you take a step closer to a working program. If your hypothesis
    was wrong, you have to come up with a new one. <idx>
      <h>experimental debugging</h>
    </idx>
<idx>
      <h>debugging</h>
      <h>experimental</h>
    </idx></p>

  <p>Programming and debugging should go hand in hand. Don't just write a bunch of code and then
    perform trial-and-error debugging until it all works. Instead, start with a program that does <term>
    something</term> and make small modifications, debugging them as you go, until the program does
    what you want. That way, you will always have a working program, and isolating errors will be
    easier.</p>

  <p>A great example of this principle is the Linux operating
    system, which contains millions of lines of code. It started out as a simple program Linus
    Torvalds used to explore the Intel 80386 chip. According to Larry Greenfield in <term>The Linux
    Users' Guide</term>, <q>One of Linus's earlier projects was a program that would switch between
    printing AAAA and BBBB. This later evolved to Linux.</q>
    <idx>
      <h>Linux</h>
    </idx>
<idx>
      <h>Torvalds, Linus</h>
    </idx>
<idx>
      <h>Greenfield, Larry</h>
    </idx>
  </p>

  <p>Finally, programming sometimes brings out strong emotions. If you are struggling with a
    difficult bug, you might feel angry, despondent, or embarrassed. Remember that you are not
    alone, and virtually every programmer has had similar experiences. Don't hesitate to reach out
    to a classmate, tutor, or instructor and ask questions!</p>
</section>