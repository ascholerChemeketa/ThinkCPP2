<chapter xml:id="computer-programming"
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Computer Programming</title>

  <introduction>
    <p>The goal of this book is to teach you to think like a computer scientist. This way of
      thinking combines some of the best features of mathematics, engineering, and natural science.
      Like mathematicians, computer scientists use formal languages to denote ideas<mdash/>specifically,
      computations. Like engineers, they design things, assembling components into systems and
      evaluating trade-offs among alternatives. And like scientists, they observe the behavior of
      complex systems, form hypotheses, and test predictions. </p>

    <p>
      <idx>
        <h>problem solving</h>
      </idx> An important skill for a computer scientist is <term>problem
      solving</term>. It involves the ability to formulate problems, think creatively about solutions,
      and express solutions clearly and accurately. As it turns out, the process of learning to
      program computers is an excellent opportunity to develop problem-solving skills. On one level,
      you will be learning to write Java programs, a useful skill by itself. But on another level,
      you will use programming as a means to an end. As we go along, that end will become clearer. </p>
  </introduction>

  <xi:include href="what-is-a-computer.ptx"/>
  <xi:include href="what-is-programming.ptx"/>
  <xi:include href="what-is-computer-science.ptx"/>
  <xi:include href="hello-world-program.ptx"/>
  <xi:include href="compiling-cpp-programs.ptx"/>
  <xi:include href="displaying-two-messages.ptx"/>
  <xi:include href="formatting-source-code.ptx"/>
  <xi:include href="using-escape-sequences.ptx"/>
  <xi:include href="debugging-programs.ptx"/>
  <xi:include href="debugging-syntax-errors.ptx"/>
  <xi:include href="other-errors.ptx"/>
  <xi:include href="vocabulary.ptx"/>
  <xi:include href="exercises.ptx"/>
</chapter>