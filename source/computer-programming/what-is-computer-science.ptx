<section xml:id="computer-programming_what-is-computer-science"
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>What Is Computer Science?</title>

  <p>Given a problem, a computer scientist's goal is to develop an <term>algorithm</term>, a
    step-by-step list of instructions for solving any instance of the problem that might arise.
    These algorithms are implemented as programs so that they can be executed by a computer.<idx>
      <h>algorithm</h>
    </idx>
  </p>

  <p>This book intentionally omits some details about the C++ language, because our main goal is
    teaching you how to think like a computer scientist. Learning how to read and write code is an
    essential part of becoming a computer scientist, but it is not the the only part.</p>

  <p>One of the most interesting aspects of writing programs is deciding how to solve a particular
    problem, especially when there are multiple solutions. Sometimes the decisions we make involve
    technical details of how to represented or process some data. C++ gives us great power to make
    those decisions, but the concepts behind the decisions we make are often universal to
    programming.</p>

  <p>Other decisions we make are about what algorithm to use to solve a particular problem. For
    example, there are many algorithms for sorting a list, and each has its own advantages. In order
    to determine which way is best for a given situation, we need techniques for describing and
    analyzing solutions formally. <term>Computer science</term> is the science of algorithms,
    including their discovery and analysis. As you learn to develop algorithms for problems you
    haven't solved before, you will learn to think like a computer scientist. <idx>
      <h>computer science</h>
    </idx></p>
</section>