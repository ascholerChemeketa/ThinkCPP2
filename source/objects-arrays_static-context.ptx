<section xml:id="objects-arrays_static-context" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Static Context</title>
<p>
<xref ref="fig_deck">Figure</xref> shows a UML class diagram for <c>Deck</c>, including the instance variable, <c>cards</c>, and the functions we have so far.
In UML diagrams, <c>private</c> attributes and functions begin with a minus sign (<c>-</c>) and <c>static</c> functions are underlined.
</p>

<p>
    <idx><h>UML</h></idx>
    <idx><h>class diagram</h></idx>
    <idx><h>diagram</h><h>class</h></idx>
</p>
<figure xml:id="fig_deck" >
<caption>UML diagram for the <c>Deck</c> class.</caption>
<image width="73%" source="external/images/deck.png" />
</figure>
<p>
The helper functions <c>randomInt</c> and <c>merge</c> are <c>static</c>, because they do not read or write any instance variables.
All other functions are instance functions, because they access the instance variable, <c>cards</c>.
</p>

<p>
When you have static functions and instance functions in the same class, it is easy to get them confused.
</p>

<p>
To invoke an instance function, you need an instance:
</p>

<program xml:id="objects-arrays_static-context-1" interactive="activecode">
<xi:include href="../programs/objects-arrays_static-context-1.cpp" parse="text"/>
</program>

<p>
<c>Deck</c> with a capital <c>D</c> is a class, and <c>deck</c> with a lowercase <c>d</c> is an object.
</p>

<p>
Say you try to invoke <c>print</c> like this:
</p>

<program xml:id="objects-arrays_static-context-2" interactive="activecode">
<xi:include href="../programs/objects-arrays_static-context-2.cpp" parse="text"/>
</program>

<p>
    <idx><h>static context</h></idx>
    <idx><h>this</h></idx>
You get a compiler error like this:
</p>

<console>
<output>
Non-static function print() cannot be referenced from a
static context.
</output>
</console>

<p>
By <q>static context</q>, the compiler means you are trying to invoke a function in a context that requires a static function.
</p>

<p>
On the other hand, if you have a <c>Deck</c> object, you can use it to invoke a static function:
</p>

<program xml:id="objects-arrays_static-context-3" interactive="activecode">
<xi:include href="../programs/objects-arrays_static-context-3.cpp" parse="text"/>
</program>

<p>
This is legal, but it is not considered good style, because someone reading this code would expect <c>randomInt</c> to be an instance function.
</p>

<p>
Another common error is to use <c>this</c> in a static function.
For example, say you write something like this:
</p>

<program xml:id="objects-arrays_static-context-4" interactive="activecode">
<xi:include href="../programs/objects-arrays_static-context-4.cpp" parse="text"/>
</program>

<p>
You get a compiler error like this:
</p>

<console>
<output>
Non-static variable this cannot be referenced from a
static context.
</output>
</console>

<p>
The problem is that <c>cards</c> is an instance variable, so it is <term>non-static</term>; therefore, you can't access it from a static function.
In general, you can't use <c>this</c> in a static function, because a static function is not invoked on an object.
</p>

<p>
For beginners, error messages about non-static context can be confusing and frustrating.
We hope this section helps.
</p>
</section>
