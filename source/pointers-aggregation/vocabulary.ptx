<section xml:id="pointers-aggregation_vocabulary"
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Vocabulary</title>
  <p>
    <dl>
      <li>
        <title>address-of operator:</title>
        <p>
          <idx>
            <h>address-of</h>
          </idx> The <pf>&amp;</pf> symbol when used to the left of a variable name and not as part of a variable or parameter declaration.</p>
      </li>
      <li>
        <title>aggregation</title>
        <p>
          <idx>
            <h>aggregation</h>
          </idx> A has-a relationship between objects where there is no ownership. The aggregated object may or may not exist; it may be shared by multiple aggregating objects; it may persist after the aggregating object is gone.</p>
      </li>
      <li>
        <title>dereference</title>
        <p>
          <idx>
            <h>dereference</h>
          </idx> To take a pointer (memory address) and go to the think it points at. Performed using the <pf>*</pf> or <pf>-></pf> operator.</p>
      </li>
      <li>
        <title>pointer</title>
        <p>
          <idx>
            <h>pointer</h>
          </idx> A variable that holds a memory address is known as a <q>pointer</q> because it <q>points</q> at that memory, allowing us to use the pointer to access the memory.</p>
      </li>
      <li>
        <title>nullptr</title>
        <p>
          <idx>
            <h>nullptr</h>
          </idx> A symbol that stands for the memory address 0. 0 is never is a valid address for a program to try to access. So setting pointers to store <pf>nullptr</pf> when they have no valid value to point at makes it easy to check if the pointer is valid or not.</p>
      </li>
    </dl>
  </p>
</section>