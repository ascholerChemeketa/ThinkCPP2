<chapter xml:id="immutable-objects" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Immutable Objects</title>


<introduction>
<p>
    <idx><h>object-oriented</h></idx>
Java is an <term>object-oriented</term> language, which means that it uses objects to (1)<nbsp/>represent data and (2)<nbsp/>provide functions related to them.
This way of organizing programs is a powerful design concept, and we will introduce it gradually throughout the remainder of the book.
</p>

<p>
    <idx><h>object</h></idx>
    <idx><h>System.in</h></idx>
    <idx><h>System.out</h></idx>
An <term>object</term> is a collection of data that provides a set of functions.
For example, <c>Scanner</c>, which you saw in <xref ref="scanner">Section</xref>, is an object that provides functions for parsing input.
<c>System.out</c> and <c>System.in</c> are also objects.
</p>

<p>
Strings are objects, too.
They contain characters and provide functions for manipulating character data.
Other data types, like <c>Integer</c>, contain numbers and provide functions for manipulating number data.
We will explore some of these functions in this chapter.
</p>
</introduction>
<xi:include  href="immutable-objects_primitives-vs-objects.ptx" />
<xi:include  href="immutable-objects_null-keyword.ptx" />
<xi:include  href="immutable-objects_strings-are-immutable.ptx" />
<xi:include  href="immutable-objects_wrapper-classes.ptx" />
<xi:include  href="immutable-objects_commandline-arguments.ptx" />
<xi:include  href="immutable-objects_argument-validation.ptx" />
<xi:include  href="immutable-objects_biginteger-arithmetic.ptx" />
<xi:include  href="immutable-objects_incremental-design.ptx" />
<xi:include  href="immutable-objects_more-generalization.ptx" />
<xi:include  href="immutable-objects_vocabulary.ptx" />
<xi:include  href="immutable-objects_exercises.ptx" />
</chapter>
