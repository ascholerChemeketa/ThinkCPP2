<section xml:id="advanced-topics_blinking-polygons" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Blinking Polygons</title>
<p>
At this point, we have a simple program that draws polygons; we can make it more fun by adding animation.
<xref ref="conway">Chapter</xref> introduced the idea of simulating time steps.
Here's a loop that runs the animation:
</p>

<program xml:id="advanced-topics_blinking-polygons-1">
<xi:include href="../../programs/advanced-topics/blinking-polygons-1.cpp" parse="text"/>
</program>

<p>
Each time through the loop, we call <pf>step</pf> to update the <pf>Drawing</pf>.
Then we sleep with a delay calculated to update about 30 times per second.
</p>

<p>
Here's what the <pf>step</pf> function of <pf>Drawing</pf> looks like:
</p>

<program xml:id="advanced-topics_blinking-polygons-2">
<xi:include href="../../programs/advanced-topics/blinking-polygons-2.cpp" parse="text"/>
</program>

<p>
It invokes <pf>step</pf> on each <pf>DrawablePolygon</pf> in the list and then repaints (clears and redraws) the canvas.
</p>

<p>
In order for this code to compile, we need <pf>DrawablePolygon</pf> to provide a <pf>step</pf> function.
Here's a version that doesn't do anything; we'll override it in subclasses:
</p>

<program xml:id="advanced-topics_blinking-polygons-3">
<xi:include href="../../programs/advanced-topics/blinking-polygons-3.cpp" parse="text"/>
</program>

<p>
Now let's design a new type of polygon that blinks.
We'll define a class named <pf>BlinkingPolygon</pf> that extends <pf>RegularPolygon</pf> and adds two more attributes: <pf>visible</pf>, which indicates whether the polygon is visible, and <pf>count</pf>, which counts the number of time steps since the last blink:
</p>

<program xml:id="advanced-topics_blinking-polygons-4">
<xi:include href="../../programs/advanced-topics/blinking-polygons-4.cpp" parse="text"/>
</program>

<p>
The constructor uses <pf>super</pf> to call the <pf>RegularPolygon</pf> constructor.
Then it initializes <pf>visible</pf> and <pf>count</pf>.
Initially, the <pf>BlinkingPolygon</pf> is visible.
</p>

<p>
The <pf>draw</pf> function draws the polygon only if it is visible.
It uses <pf>super</pf> to call <pf>draw</pf> in the parent class.
But the parent class is <pf>RegularPolygon</pf>, which does not provide a <pf>draw</pf> function.
In this case, <pf>super</pf> invokes <pf>draw</pf> from the <pf>DrawablePolygon</pf> class.
</p>

<p>
The <pf>step</pf> function increments <pf>count</pf>.
Every 10 time steps, it toggles <pf>visible</pf> and resets <pf>count</pf> to 0.
</p>
</section>
