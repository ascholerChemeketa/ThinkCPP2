<section xml:id="variables-operators_vocabulary">
<title>Vocabulary</title>
<ul>
<li>
<title>variable:</title>
<p>
<idx><h>variable</h></idx>
A named storage location for values.
All variables have a type, which is declared when the variable is created.</p></li>
<li>
<title>value:</title>
<p>
<idx><h>value</h></idx>
A number, string, or other data that can be stored in a variable.
Every value belongs to a type (e.g., <c>int</c> or <c>String</c>).</p></li>
<li>
<title>type:</title>
<p>
<idx><h>type</h></idx>
Mathematically speaking, a set of values.
The type of a variable determines which values it can have.</p></li>
<li>
<title>declaration:</title>
<p>
<idx><h>declaration</h></idx>
A statement that creates a new variable and specifies its type.</p></li>
<li>
<title>keyword:</title>
<p>
<idx><h>keyword</h></idx>
A reserved word used by the compiler to analyze programs.
You cannot use keywords (like <c>public</c>, <c>class</c>, and <c>void</c>) as variable names.</p></li>
<li>
<title>assignment:</title>
<p>
<idx><h>assignment</h></idx>
A statement that gives a value to a variable.</p></li>
<li>
<title>initialize:</title>
<p>
<idx><h>initialize</h></idx>
To assign a variable for the first time.</p></li>
<li>
<title>state:</title>
<p>
<idx><h>state</h></idx>
The variables in a program and their current values.</p></li>
<li>
<title>memory diagram:</title>
<p>
<idx><h>memory diagram</h></idx>
A graphical representation of the state of a program at a point in time.</p></li>
<li>
<title>operator:</title>
<p>
<idx><h>operator</h></idx>
A symbol that represents a computation like addition, multiplication, or string concatenation.</p></li>
<li>
<title>operand:</title>
<p>
<idx><h>operand</h></idx>
One of the values on which an operator operates.
Most operators in Java require two operands.</p></li>
<li>
<title>expression:</title>
<p>
<idx><h>expression</h></idx>
A combination of variables, operators, and values that represents a single value.
Expressions also have types, as determined by their operators and operands.</p></li>
<li>
<title>floating-point:</title>
<p>
<idx><h>floating-point</h></idx>
A data type that represents numbers with an integer part and a fractional part.
In Java, the default floating-point type is <c>double</c>.</p></li>
<li>
<title>rounding error:</title>
<p>
<idx><h>rounding error</h></idx>
The difference between the number we want to represent and the nearest floating-point number.</p></li>
<li>
<title>concatenate:</title>
<p>
<idx><h>concatenate</h></idx>
To join two values, often strings, end to end.</p></li>
<li>
<title>order of operations:</title>
<p>
<idx><h>order of operations</h></idx>
The rules that determine in what order expressions are evaluated.
Also known as <q>operator precedence</q>.</p></li>
<li>
<title>compile-time error:</title>
<p>
<idx><h>compile-time error</h></idx>
An error in the source code that makes it impossible to compile.
Also called a <q>syntax error</q>.</p></li>
<li>
<title>parse:</title>
<p>
<idx><h>parse</h></idx>
To analyze the structure of a program; what the compiler does first.</p></li>
<li>
<title>run-time error:</title>
<p>
<idx><h>run-time error</h></idx>
An error in a program that makes it impossible to run to completion.
Also called an <q>exception</q>.</p></li>
<li>
<title>logic error:</title>
<p>
<idx><h>logic error</h></idx>
An error in a program that makes it do something other than what the programmer intended.</p></li>
</ul>
</section>
