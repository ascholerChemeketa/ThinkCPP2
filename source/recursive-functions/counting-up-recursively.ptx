<section xml:id="recursive-functions_counting-up-recursively" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Counting Up Recursively</title>
<p>
The <pf>countdown</pf> example in <xref ref="recursion">Section</xref> has three parts: (1) it checks the base case, (2) it displays something, and (3) it makes a recursive call.
What do you think happens if you reverse steps 2 and 3, making the recursive call <term>before</term> displaying?
</p>

<program>
<xi:include href="../../programs/recursive-functions/counting-up-recursively-1.cpp" parse="text"/>
</program>

<p>
The stack diagram is the same as before, and the function is still called <m>n</m> times.
But now the <pf>System.out.println</pf> happens just before each recursive call returns.
As a result, it counts <term>up</term> instead of down:
</p>

<console>
<output>
Blastoff!
1
2
3
</output>
</console>

<p>
Keep this in mind for the next example, which displays numbers in binary.
</p>
</section>
