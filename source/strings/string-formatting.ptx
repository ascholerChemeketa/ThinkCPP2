<section xml:id="strings_string-formatting" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>String Formatting</title>
<p>
    <idx><h>printf</h></idx>
In <xref ref="printf">Section</xref>, we learned how to use <c>System.out.printf</c> to display formatted output.
Sometimes programs need to create strings that are formatted a certain way, but not display them immediately (or ever).
For example, the following function returns a time string in 12-hour format:
</p>

<program xml:id="strings_string-formatting-1">
<xi:include href="../../programs/strings/string-formatting-1.cpp" parse="text"/>
</program>

<p>
    <idx><h>string</h><h>format</h></idx>
<c>String.format</c> takes the same arguments as <c>System.out.printf</c>: a format specifier followed by a sequence of values.
The main difference is that <c>System.out.printf</c> <term>displays</term> the result on the screen.
<c>String.format</c> creates a new string but does not display anything.
</p>

<p>
In this example, the format specifier <c>%02d</c> means <q>two-digit integer padded with zeros</q>, so <c>timeString(19, 5)</c> returns the string <c>"07:05 PM"</c>.
As an exercise, try writing two nested <c>for</c> loops (in <c>main</c>) that invoke <c>timeString</c> and display all possible times over a 24-hour period.
</p>

<p>
Be sure to skim through the documentation for <c>String</c>.
Knowing what other functions are there will help you avoid reinventing the wheel.
The easiest way to find documentation for Java classes is to do a web search for <q>Java</q> and the name of the class.
</p>
</section>
