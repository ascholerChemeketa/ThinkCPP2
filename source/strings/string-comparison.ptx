<section xml:id="strings_string-comparison" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>String Comparison</title>
<p>
    <idx><h>equals</h></idx>
    <idx><h>string</h><h>comparing</h></idx>
When comparing strings, it might be tempting to use the <c>==</c> and <c>!=</c> operators.
But that will almost never work.
The following code compiles and runs, but it always displays <c>Goodbye!</c><nbsp/>regardless what the user types.
</p>

<program xml:id="strings_string-comparison-1">
<xi:include href="../../programs/strings/string-comparison-1.cpp" parse="text"/>
</program>

<p>
The problem is that the <c>==</c> operator checks whether the two operands refer to the <term>same object</term>.
Even if the answer is <c>"yes"</c>, it will refer to a different object in memory than the literal string <c>"yes"</c> in the code.
You'll learn more about objects and references in the next chapter.
</p>

<p>
The correct way to compare strings is with the <c>equals</c> function, like this:
</p>

<program xml:id="strings_string-comparison-2">
<xi:include href="../../programs/strings/string-comparison-2.cpp" parse="text"/>
</program>

<p>
This example invokes <c>equals</c> on <c>answer</c> and passes <c>"yes"</c> as an argument.
The <c>equals</c> function returns <c>true</c> if the strings contain the same characters; otherwise, it returns <c>false</c>.
</p>

<p>
    <idx><h>compareTo</h></idx>
If two strings differ, we can use <c>compareTo</c> to see which comes first in alphabetical order:
</p>

<program xml:id="strings_string-comparison-3">
<xi:include href="../../programs/strings/string-comparison-3.cpp" parse="text"/>
</program>

<p>
The return value from <c>compareTo</c> is the difference between the first characters in the strings that are not the same.
In the preceding code, <c>compareTo</c> returns positive <c>8</c>, because the second letter of <c>"Ada"</c> comes before the second letter of <c>"Alan"</c> by eight letters.
</p>

<p>
If the first string (the one on which the function is invoked) comes earlier in the alphabet, the difference is negative.
If it comes later in the alphabet, the difference is positive.
If the strings are equal, their difference is zero.
</p>

<p>
    <idx><h>case-sensitive</h></idx>
Both <c>equals</c> and <c>compareTo</c> are case-sensitive.
In Unicode, uppercase letters come before lowercase letters.
So <c>"Ada"</c> comes before <c>"ada"</c>.
</p>
</section>
