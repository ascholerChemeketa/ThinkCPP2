<section xml:id="graphics_creating-graphics" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Creating Graphics</title>
<p>
    <idx><h>Canvas</h></idx>
    <idx><h>Graphics</h></idx>
There are several ways to create graphics in Java; the simplest way is to use <pf>java.awt.Canvas</pf> and <pf>java.awt.Graphics</pf>.
A <pf>Canvas</pf> is a blank rectangular area of the screen onto which the application can draw.
The <pf>Graphics</pf> class provides basic drawing functions such as <pf>drawLine</pf>, <pf>drawRect</pf>, and <pf>drawString</pf>.
</p>

<p>
Here is an example program that draws a circle by using the <pf>fillOval</pf> function:
</p>

<program xml:id="graphics_creating-graphics-1" interactive="activecode">
<xi:include href="../../programs/graphics/creating-graphics-1.cpp" parse="text"/>
</program>
  
<program xml:id="graphics_creating-graphics-2" interactive="activecode">
<xi:include href="../../programs/graphics/creating-graphics-2.cpp" parse="text"/>
</program>

<p>
The <pf>Drawing</pf> class extends <pf>Canvas</pf>, so it has all the functions provided by <pf>Canvas</pf>, including <pf>setSize</pf>.
You can read about the other functions in the documentation, which you can find by doing a web search for <q>Java Canvas</q>.
</p>

<p>
    <idx><h>JFrame</h></idx>
In the <pf>main</pf> function, we do the following:
<ol>
<li><p>Create a <pf>JFrame</pf> object, which is the window that will contain the canvas.</p></li>
<li><p>Create a <pf>Drawing</pf> object (which is the canvas), set its width and height, and add it to the frame.</p></li>
<li><p>Pack the frame (resize it) to fit the canvas, and display it on the screen.</p></li>
</ol>
</p>

<p>
    <idx><h>paint</h></idx>
Once the frame is visible, the <pf>paint</pf> function is called whenever the canvas needs to be drawn; for example, when the window is moved or resized.
If you run this code, you should see a black circle on a gray background.
</p>

<p>
The application doesn't end after the <pf>main</pf> function returns; instead, it waits for the <pf>JFrame</pf> to close.
When the <pf>JFrame</pf> closes, it calls <pf>System.exit</pf>, which ends the program.
</p>
</section>
