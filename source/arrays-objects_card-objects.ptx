<section xml:id="arrays-objects_card-objects" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Card Objects</title>
<p>
<idx><h>Card</h></idx>
If we want to define a class to represent a playing card, it is pretty clear what the instance variables should be: <c>rank</c> and <c>suit</c>.
It is not as obvious what types they should be.
</p>

<p>
One possibility is a <c>String</c> containing things like <c>"Spade"</c> for suits and <c>"Queen"</c> for ranks.
A problem with this choice is that it would not be easy to compare cards to see which had a higher rank or suit.
</p>

<p>
<idx><h>encode</h></idx>
<idx><h>map to</h></idx>
An alternative is to use integers to <em>encode</em> the ranks and suits.
By encode, we <em>don't</em> mean to encrypt or translate into a secret code.
We mean to define a mapping between a sequence of numbers and the things we want to represent.
</p>

<p>
Here is a mapping for suits:
</p>
<tabular>
<row><cell>Clubs</cell><cell><m>\mapsto</m></cell><cell>0</cell></row>
<row><cell>Diamonds</cell><cell><m>\mapsto</m></cell><cell>1</cell></row>
<row><cell>Hearts</cell><cell><m>\mapsto</m></cell><cell>2</cell></row>
<row><cell>Spades</cell><cell><m>\mapsto</m></cell><cell>3</cell></row>
</tabular>
<p>
We use the mathematical symbol <m>\mapsto</m> to make it clear that these mappings are not part of the program.
They are part of the program design, but they never appear explicitly in the code.
</p>

<p>
Each of the numerical ranks (2 through 10) maps to the corresponding integer.
For the face cards, we can use the following:
</p>
<tabular>
<row><cell>Ace</cell><cell><m>\mapsto</m></cell><cell>1</cell></row>
<row><cell>Jack</cell><cell><m>\mapsto</m></cell><cell>11</cell></row>
<row><cell>Queen</cell><cell><m>\mapsto</m></cell><cell>12</cell></row>
<row><cell>King</cell><cell><m>\mapsto</m></cell><cell>13</cell></row>
</tabular>
<p>
With this encoding, the class definition for the <c>Card</c> type looks like this:
</p>

<program xml:id="arrays-objects_card-objects-1">
<xi:include href="../programs/arrays-objects_card-objects-1.cpp" parse="text"/>
</program>

<p>
<idx><h>constructor</h></idx>
The instance variables are <c>private</c>: we can access them from inside this class, but not from other classes.
</p>

<p>
The constructor takes a parameter for each instance variable.
To create a <c>Card</c> object, we use the <c>new</c> operator:
</p>

<program xml:id="arrays-objects_card-objects-2">
<xi:include href="../programs/arrays-objects_card-objects-2.cpp" parse="text"/>
</program>

<p>
The result is a reference to a <c>Card</c> that represents the 3 of Clubs.
</p>
</section>
