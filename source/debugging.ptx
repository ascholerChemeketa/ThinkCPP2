<chapter xml:id="debugging" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Debugging</title>


<introduction>
<p>
<idx><h>debugging</h></idx>
Although there are debugging suggestions throughout the book, we thought it would be useful to say more in an appendix.
If you are having a hard time debugging, you might want to review this appendix from time to time.
</p>

<p>
The best debugging strategy depends on what kind of error you have:
<ul>
<li><p><em>Compile-time errors</em> indicate that there is something wrong with the syntax of the program.
Example: omitting the semicolon at the end of a statement.

<idx><h>compile-time error</h></idx>
<idx><h>error</h><h>compile-time</h></idx>
<idx><h>syntax</h></idx></p></li>
<li><p><em>Run-time errors</em> are produced if something goes wrong while the program is running.
Example: an infinite recursion eventually causes a <c>StackOverflowError</c>.

<idx><h>run-time error</h></idx>
<idx><h>error</h><h>run-time</h></idx>
<idx><h>exception</h></idx></p></li>
<li><p><em>Logic errors</em> cause the program to do the wrong thing.
Example: an expression may not be evaluated in the order you expect.

<idx><h>logic error</h></idx>
<idx><h>error</h><h>logic</h></idx></p></li>
</ul>
</p>

<p>
The following sections are organized by error type; some techniques are useful for more than one type.
</p>
</introduction>
<xi:include  href="debugging_compiletime-errors.ptx" />
<xi:include  href="debugging_runtime-errors.ptx" />
<xi:include  href="debugging_logic-errors.ptx" />
</chapter>
