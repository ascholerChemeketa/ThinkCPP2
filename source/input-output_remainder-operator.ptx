<section xml:id="input-output_remainder-operator" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Remainder Operator</title>
<!-- TODO - move to variables operator chapter after arithmetic -->
<p>
Let's take the example one step further: suppose you have a measurement in inches and you want to convert to feet and inches.
The goal is divide by 12 (the number of inches in a foot) and keep the remainder.
</p>

<p>
    <idx><h>modulo</h></idx>
    <idx><h>% remainder operator</h></idx>
    <idx><h>operator</h><h>remainder</h></idx>
    <idx><h>remainder</h></idx>
You have already seen the division operation (<c>/</c>), which computes the quotient of two numbers.
If the numbers are integers, the operation is integer division.
Java also provides the <term>modulo</term> operation (<c>%</c>), which divides two numbers and computes the remainder.
</p>

<p>
Using division and modulo, we can convert to feet and inches like this:
</p>

<program xml:id="input-output_remainder-operator-1">
<xi:include href="../programs/input-output_remainder-operator-1.cpp" parse="text"/>
</program>

<p>
The first line yields 6.
The second line, which is pronounced <q>76 mod 12</q>, yields 4.
So 76 inches is 6 feet, 4 inches.
</p>

<p>
    <idx><h>modulus</h></idx>
Many people (and textbooks) incorrectly refer to <c>%</c> as the <q>modulus operator</q>.
In mathematics, however, <term>modulus</term> is the number you're dividing by.
In the previous example, the modulus is 12.
</p>

<p>
The Java language specification refers to <c>%</c> as the <q>remainder operator</q>.
The remainder operator looks like a percent sign, but you might find it helpful to think of it as a division sign (<m>\div</m>) rotated to the left.
</p>

<p>
    <idx><h>divisible</h></idx>
    <idx><h>extract digits</h></idx>
Modular arithmetic turns out to be surprisingly useful.
For example, you can check whether one number is divisible by another: if <c>x % y</c> is <c>0</c>, then <c>x</c> is divisible by <c>y</c>.
You can use the remainder operator to <q>extract</q> digits from a number: <c>x % 10</c> yields the rightmost digit of <c>x</c>, and <c>x % 100</c> yields the last two digits.
And many encryption algorithms use remainders extensively.
</p>
</section>
