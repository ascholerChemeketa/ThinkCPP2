<section xml:id="variables-operators_arithmetic-operators"
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Arithmetic Operators</title>

  <subsection>
    <title>Basics</title>
    <p>
      <idx>
        <h>operator</h>
      </idx>
  <term>Operators</term> are special symbols that are used to
      represent simple computations like addition and multiplication. Most of the operators in C++
      do exactly what you would expect them to do, because they are common mathematical symbols. For
      example, the operator for adding two integers is <pf>+</pf> and multiplication is <pf>*</pf>.</p>
    <p>The following are all legal C++ expressions whose meaning is more or less obvious: </p>
    <program>
    1 + 1
    hour - 1
    hour * 60 + minute
  </program>
    <p>The following program converts a time of day to minutes: </p>

    <program label="variables-operators_arithmetic-operators-program-1"
             interactive="activecode">
<xi:include href="../../programs/variables-operators/arithmetic-operators-1.cpp" parse="text"/>
</program>

    <p>
      <idx>
        <h>expression</h>
      </idx>
    <idx>
        <h>operand</h>
      </idx> In this program, <pf>hour * 60 + minute</pf> is an <term>expression</term>, which
      represents a single value to be computed (<pf>719</pf>). When the program runs, each variable is
      replaced by its current value, and then the operators are applied. The values that operators
      work with are called <term>operands</term>. </p>

    <p>Expressions are generally a combination of numbers, variables, and operators. When evaluated,
      they become a single value. For example, the expression <pf>1 + 1</pf> has the value <pf>2</pf>. In
      the expression <pf>hour - 1</pf>, C++ replaces the variable with its value, yielding <pf>11 - 1</pf>, which
      has the value <pf>10</pf>. </p>

    <p>In the expression <pf>hour * 60 + minute</pf>, both variables get replaced, yielding <pf>11 * 60 + 59</pf>. The
      multiplication happens first, yielding <pf>660 + 59</pf>. Then the addition yields <pf>719</pf>.</p>
    <p>The value of an expression is temporary - if we don't do something with it, it will simply be
      discarded. That is why the sample above stores the value of <pf>hour * 60 + minute</pf> into the variable <pf>totalMinutes</pf>.
      We can also immediately print the result of an expression by doing something like: <pf>cout &lt;&lt; 2 * x &lt;&lt; endl;</pf>
      which would print out the result of multiplying x by 2.</p>

    <insight>
      <p> A variable on the left hand side of <pf>=</pf> is being written to. A variable on the right
        hand side of <pf>=</pf> or in any other expression is being read from. The entire right hand
        side of an assignment statement is evaluated to find a single value, which is then stored in
        the variable on the left hand side. </p>
    </insight>
  </subsection>

  <subsection>
    <title>Common Errors</title>

    <p>Much of what you already know about math in other domains translates directly to C++. But
      there are a few common errors that come from assuming things that are not true in C++.</p>

    <p>You may think of the <q>^</q> symbol as meaning <q>power</q>. It does not mean that in C++.
      It means <q>binary exclusive or</q>, an operation we will not cover. If you try to do
      something like <pf>5 ^ 2</pf> you will get an answer that has nothing to do with <q>5 to the second
      power</q>. We will learn soon how to calculate exponents.</p>

    <warning>
      <p><pf>^</pf> does NOT mean <q>raise to the power</q></p>
    </warning>

    <p>Another common mistake is to try to use <q>implicit multiplication</q>. In math, we often
      write <m>2x</m> to mean <q>2 times x</q>. In C++ you always have to write out the <pf>*</pf>.
      Here are some samples: <tabular>
        <row header="yes">
          <cell>Wrong</cell>
          <cell>Correct</cell>
        </row>
        <row>
          <cell>2x</cell>
          <cell>2 * x</cell>
        </row>
        <row>
          <cell>2(x + 1)</cell>
          <cell>2 * (x + 1)</cell>
        </row>
        <row>
          <cell>(x2 - x1)(x2 - x1)</cell>
          <cell>(x2 - x1) * (x2 - x1)</cell>
        </row>
      </tabular>
    </p>
  </subsection>

  <exercise label="variables-operators_arithmetic-operators-ex-1">
    <statement>
      <p>Match the statement to the result, given that x = 10.</p>
    </statement>
    <feedback> Try again! </feedback>
    <cardsort>
      <match>
        <premise>x*10</premise>
        <response>100</response>
      </match>
      <match>
        <premise>x-10</premise>
        <response>0</response>
      </match>
      <match>
        <premise>100/x</premise>
        <response>10</response>
      </match>
      <match>
        <premise>(x+x+x+x+x)*20</premise>
        <response>1000</response>
      </match>
    </cardsort>
  </exercise>

</section>