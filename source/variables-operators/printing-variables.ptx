<section xml:id="variables-operators_printing-variables"
         xmlns:xi="http://www.w3.org/2001/XInclude">

  <title>Printing Variables</title>
  <p>You can display the current value of a variable by using <pf>cout</pf>. The following
    statements declare a variable named <pf>answer</pf>, assign it the value <pf>42</pf>, and display that
    value: </p>

  <listing>
  <program label="variables-operators_printing-variables-program-1"
           interactive="activecode">
<xi:include href="../../programs/variables-operators/printing-variables-1.cpp" parse="text"/>
</program>
  </listing>

  <p>When we talk about displaying a variable, we generally mean the <term>value</term> of the
    variable. To display the <term>name</term> of a variable, you have to put it in quotes: </p>

  <listing>
  <program label="variables-operators_printing-variables-program-2"
           interactive="activecode">
<xi:include href="../../programs/variables-operators/printing-variables-2.cpp" parse="text"/>
</program>
  </listing>

  <p>Printing out a variable's name and value can be very helpful for debugging. For example, if you have a variable <pf>totalPay</pf> that holds the total pay for a week, you could print it out like this:</p>

  <program>
cout &lt;&lt; "totalPay is now " &lt;&lt; totalPay &lt;&lt; endl;
  </program>

  <p>As the program runs, it will print out the current value of <pf>totalPay</pf> so that we can examine the output and see what value the variable had at that point.</p>

  <p>Recall that to output multiple values on the same line, you can either use one <pf>cout</pf> that outputs multiple values (each separated by &lt;&lt;) or you can use multiple <pf>cout</pf> statements. This program demonstrates two different ways to print <pf>11:59</pf>.</p>

  <listing>
  <program label="variables-operators_printing-variables-program-3"
           interactive="activecode">
<xi:include href="../../programs/variables-operators/printing-variables-3.cpp" parse="text"/>
</program>
  </listing>

  <exercise label="variables-operators_printing-variables-ex-1">
    <statement>
      <p>What prints when the following code is run?</p>
      <program>int main() {
  int a;
  int b;
  a = 2;
  b = 8;
  cout &lt;&lt; "a";
}</program>
    </statement>
    <choices randomize="yes">
      <choice correct="yes">
        <statement>
          <p>a</p>
        </statement>
        <feedback>
          The string, not the variable, a will be printed.
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>b</p>
        </statement>
        <feedback>
          b will not be printed.
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>2</p>
        </statement>
        <feedback>
          The cout statement prints a, not the value of the variable a.
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>8</p>
        </statement>
        <feedback>
          8 is the value of b and will not be printed
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Nothing! There will be a compile error!</p>
        </statement>
        <feedback>
          Try again.
        </feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="variables-operators_printing-variables-ex-2">
    <statement>
      <p>Now, what prints?</p>
      <program>int main() {
  int a;
  int b;
  a = 2;
  b = 8;
  cout &lt;&lt; b;
}</program>
    </statement>
    <choices randomize="yes">
      <choice>
        <statement>
          <p>a</p>
        </statement>
        <feedback>
          The string a will not be printed.
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>b</p>
        </statement>
        <feedback>
          The string b will not be printed.
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>z</p>
        </statement>
        <feedback>
          2 is the value of a will not be printed.
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>8</p>
        </statement>
        <feedback>
          8 is the value of b and will be printed!
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Nothing! There will be a compile error!</p>
        </statement>
        <feedback>
          Try again.
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>