<section xml:id="variables-operators_vocabulary"
         xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Vocabulary</title>
  <p>
    <dl>
      <li>
        <title>variable:</title>
        <p>
          <idx>
            <h>variable</h>
          </idx> A named storage location for values. All variables have
          a type, which is declared when the variable is created.</p>
      </li>
      <li>
        <title>value:</title>
        <p>
          <idx>
            <h>value</h>
          </idx> A number or other data that can be stored in a variable.
          Every value belongs to a type (e.g., <pf>int</pf> or <pf>double</pf>).</p>
      </li>
      <li>
        <title>type:</title>
        <p>
          <idx>
            <h>type</h>
          </idx> Mathematically speaking, a set of values. The type of a
          variable determines which values it can have.</p>
      </li>
      <li>
        <title>declaration:</title>
        <p>
          <idx>
            <h>declaration</h>
          </idx> A statement that creates a new variable and specifies
          its type.</p>
      </li>
      <li>
        <title>keyword:</title>
        <p>
          <idx>
            <h>keyword</h>
          </idx> A reserved word used by the compiler to analyze programs.
          You cannot use keywords (like <pf>int</pf> and <pf>void</pf>) as variable names.</p>
      </li>
      <li>
        <title>assignment:</title>
        <p>
          <idx>
            <h>assignment</h>
          </idx> A statement that gives a value to a variable.</p>
      </li>
      <li>
        <title>initialize:</title>
        <p>
          <idx>
            <h>initialize</h>
          </idx> To assign a variable for the first time.</p>
      </li>
      <li>
        <title>state:</title>
        <p>
          <idx>
            <h>state</h>
          </idx> The variables in a program and their current values.</p>
      </li>
      <li>
        <title>memory diagram:</title>
        <p>
          <idx>
            <h>memory diagram</h>
          </idx> A graphical representation of the state of a
          program at a point in time.</p>
      </li>
      <li>
        <title>operator:</title>
        <p>
          <idx>
            <h>operator</h>
          </idx> A symbol that represents a computation like addition,
          multiplication, or string concatenation.</p>
      </li>
      <li>
        <title>operand:</title>
        <p>
          <idx>
            <h>operand</h>
          </idx> One of the values on which an operator operates. Most
          operators in C++ require two operands.</p>
      </li>
      <li>
        <title>expression:</title>
        <p>
          <idx>
            <h>expression</h>
          </idx> A combination of variables, operators, and values that
          represents a single value. Expressions also have types, as determined by their operators
          and operands.</p>
      </li>
      <li>
        <title>order of operations:</title>
        <p>
          <idx>
            <h>order of operations</h>
          </idx> The rules that determine in what order
          expressions are evaluated. Also known as <q>operator precedence</q>.</p>
      </li>
      <li>
        <title>modulo:</title>
        <p>
          <idx>
            <h>modulo</h>
          </idx> An operation that yields the remainder when one integer is
          divided by another. In C++, it is denoted with a percent sign: <pf>5 % 2</pf> is <pf>1</pf>.</p>
      </li>
      <li>
        <title>modulus:</title>
        <p>
          <idx>
            <h>modulus</h>
          </idx> The value of <pf>b</pf> in the expression <pf>a % b</pf>. It often
          represents unit conversions, such as 24 hours in a day, 60 minutes in an hour, etc.</p>
      </li>
      <li>
        <title>prompt:</title>
        <p>
          <idx>
            <h>prompt</h>
          </idx> A brief message displayed in a print statement that asks
          the user for input.</p>
      </li>
    </dl>
  </p>
</section>