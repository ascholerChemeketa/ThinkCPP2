<section xml:id="immutable-objects_null-keyword" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>The null Keyword</title>
<p>
Often when you declare an object variable, you assign it to reference an object.
But sometimes you want to declare a variable that doesn't refer to an object, at least initially.
</p>

<p>
    <idx><h>null</h></idx>
In Java, the keyword <pf>null</pf> is a special value that means <q>no object</q>.
You can initialize object and array variables this way:
</p>

<program xml:id="immutable-objects_null-keyword-1">
<xi:include href="../../programs/immutable-objects/null-keyword-1.cpp" parse="text"/>
</program>

<p>
The value <pf>null</pf> is represented in memory diagrams by a small box with no arrow, as in <xref ref="fig_mem4">Figure</xref>.
</p>
<figure xml:id="fig_mem4" >
<caption>Memory diagram showing variables that are <pf>null</pf>.</caption>
<image width="73%" source="images/mem4.png" />
</figure>
<p>
    <idx><h>NullPointerException</h></idx>
    <idx><h>exception</h><h>NullPointer</h></idx>
If you try to use a variable that is <pf>null</pf> by invoking a function or accessing an element, Java throws a <pf>NullPointerException</pf>:
</p>

<program xml:id="immutable-objects_null-keyword-2">
<xi:include href="../../programs/immutable-objects/null-keyword-2.cpp" parse="text"/>
</program>

<p>
On the other hand, it is perfectly fine to pass a <pf>null</pf> reference as an argument to a function, or to receive one as a return value.
In these situations, <pf>null</pf> is often used to represent a special condition or indicate an error.
</p>
</section>
